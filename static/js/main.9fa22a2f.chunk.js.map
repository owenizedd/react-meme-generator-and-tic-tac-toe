{"version":3,"sources":["logo.svg","LiveSearch/AppSearch.js","TicTacToe/Board.js","TicTacToe/App2.js","Header.js","App.js","MainContent.js","serviceWorker.js","index.js"],"names":["module","exports","AppSearch","state","search","profiles","cards","handleChange","evt","map","profile","index","name","first","last","toLowerCase","indexOf","target","value","className","key","src","picture","medium","setState","i","this","length","fetch","then","response","json","data","results","console","log","prevState","newProfiles","push","type","id","onChange","Component","Board","renderButton","status","props","pos","onClick","Button","App2","counter","Array","fill","savedStatus","winner","componentDidUpdate","win","g","handleButtonClick","newStatus","newCounter","newSavedStatus","handleHistory","slice","currentPlayer","buttons","stat","style","margin","React","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9fa22a2f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\r\nimport './App.css'\r\n\r\nclass AppSearch extends Component{\r\n  state={\r\n    search: \"\",\r\n    profiles: [],\r\n    cards: [],\r\n  }\r\n  handleChange = (evt) =>{\r\n    // console.log(\"test\")\r\n\r\n    const cards = this.state.profiles.map( (profile, index) => {\r\n      if ((profile.name.first + \" \" +  profile.name.last).toLowerCase().indexOf(evt.target.value.toLowerCase()) != -1){\r\n        return <div className=\"box\" key={index}><img src={profile.picture.medium}/><p>{profile.name.first + \" \" + profile.name.last}</p></div>\r\n      }\r\n    })\r\n\r\n    this.setState({\r\n      search: evt.target.value,\r\n      cards: cards\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    for(let i = 0; i<1000; i++){\r\n      if (this.state.profiles.length>10) continue;\r\n      fetch('https://randomuser.me/api/')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          const profiles = data.results[0];\r\n\r\n          console.log(profiles);\r\n          this.setState(prevState=>{\r\n            let newProfiles = prevState.profiles;\r\n            // console.log(newProfiles)\r\n            newProfiles.push(profiles);\r\n            return{\r\n              profiles: newProfiles\r\n            }\r\n          })\r\n        })\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if (this.state.profiles.length==10 && this.state.cards.length == 0){\r\n      const cards = this.state.profiles.map( (profile, index) => {\r\n        return <div className=\"box\" key={index}><img src={profile.picture.medium}/><p>{profile.name.first + \" \" + profile.name.last}</p></div>\r\n      })\r\n      this.setState({\r\n        cards: cards\r\n      })\r\n    }\r\n  }\r\n  render(){\r\n    return(\r\n      <div className=\"search-app\">\r\n        <span>Input text to search user by name</span>\r\n        <input type=\"text\" name=\"search\" id=\"\" onChange={this.handleChange} value={this.state.search}/>\r\n        <div className=\"boxes\">\r\n          {/* <div className=\"box\">\r\n            <img src=\"\" alt=\"\"/>\r\n            <p>Name</p>\r\n          </div>\r\n          <div className=\"box\">\r\n            <img src=\"\" alt=\"\"/>\r\n            <p>Name</p>\r\n          </div>\r\n          <div className=\"box\">\r\n            <img src=\"\" alt=\"\"/>\r\n            <p>Name</p>\r\n          </div>\r\n          <div className=\"box\">\r\n            <img src=\"\" alt=\"\"/>\r\n            <p>Name</p>\r\n          </div>\r\n          <div className=\"box\">\r\n            <img src=\"\" alt=\"\"/>\r\n            <p>Name</p>\r\n          </div> */}\r\n        \r\n        {this.state.cards}          \r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AppSearch;","import React, {Component} from 'react';\r\nimport './App.css'\r\n\r\nclass Board extends Component {\r\n  renderButton = i => <Button status={this.props.status[i]} pos={i} onClick={this.props.onClick}/>\r\n  \r\n\r\n  \r\n  render(){\r\n    return(\r\n      <div className=\"board\">\r\n        <div>\r\n          {this.renderButton(0)}\r\n          {this.renderButton(1)}\r\n          {this.renderButton(2)}\r\n        </div>\r\n        <div>\r\n          {this.renderButton(3)}\r\n          {this.renderButton(4)}\r\n          {this.renderButton(5)}\r\n        </div>\r\n        <div>\r\n          {this.renderButton(6)}\r\n          {this.renderButton(7)}\r\n          {this.renderButton(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nclass Button extends Component {\r\n\r\n  render(){\r\n    return(\r\n      <button className=\"square\" onClick = { () => this.props.onClick(this.props.pos)}>{this.props.status}</button>\r\n    )\r\n  }\r\n}\r\nexport default Board","import React, {Component} from 'react';\r\nimport Board from './Board'\r\nimport './App.css'\r\n\r\nclass App2 extends Component {\r\n  state = {\r\n    counter: 0,\r\n    status: Array(9).fill(null),\r\n    savedStatus: [Array(9).fill(null)],\r\n    winner: '',\r\n\r\n  }\r\n\r\n\r\n  componentDidUpdate = () =>{\r\n    let win = this.state.winner;\r\n    let g = this.state.status;\r\n    if (g[0] === g[4] && g[4] === g[8]) win = g[0];\r\n    if (g[1] === g[4] && g[4] === g[7]) win = g[1];\r\n    if (g[2] === g[4] && g[4] === g[6]) win = g[2];\r\n    if (g[3] === g[4] && g[4] === g[5]) win = g[3];\r\n    if (g[0] === g[3] && g[3] === g[6]) win = g[0];\r\n    if (g[2] === g[5] && g[5] === g[8]) win = g[8];\r\n    if (g[0] === g[1] && g[1] === g[2]) win = g[2];\r\n    if (g[6] === g[7] && g[7] === g[8]) win = g[6];\r\n    if (win !== this.state.winner){\r\n      this.setState({\r\n        winner: win\r\n      })\r\n    }\r\n  } \r\n\r\n  handleButtonClick = (i) => {\r\n    let newStatus = [...this.state.status];\r\n\r\n    if (newStatus[i] === null && !this.state.winner){\r\n      newStatus[i] = this.state.counter % 2 === 0 ? 'X' : 'O';\r\n      let newCounter = this.state.counter + 1;\r\n      let newSavedStatus = this.state.savedStatus;\r\n      newSavedStatus.push(newStatus);\r\n      this.setState({\r\n        status: newStatus,\r\n        counter: newCounter,\r\n        savedStatus: newSavedStatus\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  handleHistory = i => {\r\n    this.setState(prevState => {\r\n      return{\r\n        status: prevState.savedStatus[i],\r\n        savedStatus: prevState.savedStatus.slice(0,i+1),\r\n        counter: i,\r\n        winner: ''\r\n      }\r\n    })\r\n  }\r\n  render(){\r\n    const currentPlayer = this.state.counter % 2 === 0 ? 'X' : 'O';\r\n    const buttons = this.state.savedStatus.map( (stat,index) => <button key={index} onClick={() => this.handleHistory(index)}>Go to state {index + 1}</button>);\r\n    return(\r\n      <div id=\"tic-tac-toe\" className=\"game-container\">\r\n        <div className=\"game-board\">\r\n          \r\n          <div><h3>Next Player: {currentPlayer}</h3></div>\r\n          <Board status={this.state.status} onClick = {this.handleButtonClick} />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div style={ {margin: \"10px\"} }> \r\n            <div>{this.state.winner && \"Game ended!\"} <br/> { this.state.winner && \"The winner is \" + this.state.winner} <hr/></div>\r\n            \r\n            <div>Game History</div>\r\n            <ol>\r\n              {buttons}\r\n            </ol>\r\n          </div>\r\n        </div>\r\n      \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App2","import React from 'react';\r\nimport logo from './logo.svg'\r\n\r\n\r\n// function Header(){\r\n//   return(\r\n//     <nav className=\"nav-container\">\r\n//       <div>\r\n//         <img src={logo} alt=\"logo\" className=\"nav-logo\"/>\r\n//         <p>ReactLearn 2</p>\r\n//       </div>\r\n//       <div>\r\n//         <a href=\"#\">Menu</a>\r\n//         <a href=\"#\">Menu</a>\r\n//         <a href=\"#\">Menu</a>\r\n//       </div>\r\n//     </nav>\r\n//   )\r\n// }\r\n\r\nclass Header extends React.Component{\r\n  render(){\r\n    return(\r\n      <nav className=\"nav-container\">\r\n        <div>\r\n          <img src={logo} alt=\"logo\" className=\"nav-logo\"/>\r\n          <p>ReactLearn 2</p>\r\n        </div>\r\n        <div>\r\n          <a href=\"#\">{this.props.item1}</a>\r\n          <a href=\"#\">{this.props.item2}</a>\r\n          <a href=\"#\">Menu</a>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header","import React from 'react';\nimport './App.css';\nimport AppSearch from './LiveSearch/AppSearch';\nimport App2 from './TicTacToe/App2';\nimport Header from './Header';\nimport MainContent from './MainContent'\nclass App extends React.Component{\n\n  render(){\n    return(\n      <div>\n        <AppSearch/>\n        <App2/>\n\n        {/* <div className=\"App meme-generator\">\n          <Header item1=\"Haha\" item2=\"Hehe\"/>\n          <MainContent />\n        </div> */}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React, { Component} from 'react'\r\n\r\nclass MainContent extends Component{\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n     firstName: \"\",\r\n     lastName: \"\",\r\n     age: \"\",\r\n     gender: \"\",\r\n     destination: \"\",\r\n     dietaryRestrictions: {\r\n       isVegetarian: false,\r\n       isKosher: false,\r\n       isLactoseFree: false\r\n     }\r\n    }\r\n    this.handleChange = this.handleChange.bind(this)\r\n  }\r\n   \r\n  handleChange(evt){\r\n    const {name, value, type, checked} = evt.target\r\n    type == \"checkbox\" ? this.setState(prevState =>{\r\n      var updatedDietary = prevState\r\n      updatedDietary[name] = checked \r\n      return {\r\n        dietaryRestrictions: updatedDietary\r\n      }\r\n    }) : this.setState({ [name]: value }) \r\n\r\n  }\r\n\r\n\r\n\r\n  render(){\r\n    \r\n    return(\r\n      <div className=\"container\">\r\n        <form action=\"\" style={{display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\"}}>\r\n          <input type=\"text\" name=\"firstName\" id=\"\" placeholder=\"First Name\" value={this.state.firstName} onChange={this.handleChange}/>\r\n          <input type=\"text\" name=\"lastName\" id=\"\" placeholder=\"Last Name\" value={this.state.lastName} onChange={this.handleChange}/>\r\n          <input type=\"number\" name=\"age\" id=\"\" value={this.state.age} onChange={this.handleChange}/>\r\n          <input type=\"radio\" name=\"gender\" value=\"male\" checked={this.state.gender === 'male' } id=\"\" onChange={this.handleChange} /> Male \r\n          <input type=\"radio\" name=\"gender\" value=\"female\" checked={this.state.gender === 'female' } onChange={this.handleChange} id=\"\"/> Female \r\n          <select name=\"destination\" id=\"\" value={this.state.destination} onChange={this.handleChange}>\r\n            <option value=\"\">-- Please choose a destination --</option>\r\n            <option value=\"US\">United State</option>\r\n            <option value=\"Netherland\">Netherland</option>\r\n            <option value=\"Australia\">Australia</option>\r\n          </select>\r\n          \r\n\r\n          <label htmlFor=\"vegetarian\">Are you vegetarian?</label>\r\n          <input \r\n            type=\"checkbox\" \r\n            name=\"isVegetarian\" \r\n            id=\"\" \r\n            checked={this.state.dietaryRestrictions.isVegetarian} \r\n            onChange={this.handleChange} />\r\n            <label htmlFor=\"kosher\">Are you kosher?</label>\r\n          <input \r\n            type=\"checkbox\" \r\n            name=\"isKosher\" \r\n            id=\"\" \r\n            checked={this.state.dietaryRestrictions.isKosher}\r\n            onChange={this.handleChange} />\r\n          <label htmlFor=\"lactoseFree\">Are you lactose free?</label>\r\n          <input \r\n            type=\"checkbox\" \r\n            name=\"isLactoseFree\" id=\"\" \r\n            checked={this.state.dietaryRestrictions.isLactoseFree}\r\n            onChange={this.handleChange}/>\r\n        </form> \r\n        <h3>Entered Information</h3>\r\n        <p>{this.state.firstName}</p>\r\n        <p>{this.state.lastName}</p>\r\n        <p>{this.state.age}</p>\r\n        <p>{this.state.gender}</p>\r\n        <p>{this.state.destination}</p>\r\n        \r\n        <p>{this.state.dietaryRestrictions.isVegetarian && \"vegetarian\"}</p>\r\n        <p>{this.state.dietaryRestrictions.isKosher && \"kosher\"}</p>\r\n        <p>{this.state.dietaryRestrictions.isLactoseFree && \"lactose free\"}</p>\r\n      </div>\r\n\r\n      \r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default MainContent","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}